// SECOND ORDER SALLY ANNE TASK

types{
    Actor-Object,
}

objects{
    t-Actor,
    m-Actor,
}

agents{
    t,
    m{TrivialAgent}
}


fluents{
    b()
}


//start{
//    *w1  {b()},
//    w2  {},
//    m   {w1-w1,w2-w2},
//    t   {w1-w1,w2-w2,w1-w2,w2-w1}
//}
initially{
    b(),
    K[m](b())
}


goals{
    b(),
    K[t](b()),
    B[m](~K[t](b())),
    B[m](B[t](~b())),
    B[m](b()),
    K[m](b()),
}

actions{
    look(owner t, observes t, determines b()),
    tell(owner m, observes t, observes m, announces ~b())
}
