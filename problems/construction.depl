types{
}

objects{
    a - Object,
    b - Object,
}

agents{
    a,
}

passive{
    b,
}


fluents{
    p(),s()
}


initially{
p(),
s(),
B[a](p()),
B[a](s()),
P[b](~p())&P[b](p()),
B[b](~s()),
B[a](P[b](~p()) & P[b](p())),
B[a]B[b](~s),
P[b]B[a]~p & P[b]B[a]p & P[b](P[a]~p & P[a]p),
B[b](P[a]~s & P[a]s),
}

goals{
    p()
}

actions{
    wait(?o - Object) {
        owner{a},
        observes(?o-Object){?o},
    }
}
