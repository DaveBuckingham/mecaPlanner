types{
    Robot-Actor,
    Actor-Locatable,
    Location-Object,
    Locatable-Object
}

objects{
    robot-Robot,
    roomba-Robot,
    livingR-Location,
    kitchen-Location,
    bedR-Location
}

agents{
    robot,
    roomba{ExampleModel},
}

passive{}

fluents{
    at(Locatable,Location),
    blocked(),
    liquid(Location),
    dirt(Location)
}

constants{
    connected(livingR, kitchen)
}


initially{
    *w1 <- {
        at(robot,livingR),
        at(roomba,livingR),
        dirt(livingR),
        liquid(kitchen),
        dirt(bedR)
    },
    *w2 <- {
        at(robot,livingR),
        at(roomba,livingR),
        dirt(livingR),
        dirt(kitchen)
    },
    *w3 <- {
        at(robot,livingR),
        at(roomba,livingR),
        dirt(livingR),
        dirt(bedR)
    },
    *w4 <- {
        at(robot,livingR),
        at(roomba,livingR),
        dirt(livingR),
        liquid(kitchen)
    },
    *w5 <- {
        at(robot,livingR),
        at(roomba,livingR),
        dirt(livingR)
    },
    *w6 <- {
        at(robot,livingR),
        at(roomba,livingR),
        dirt(livingR),
        dirt(kitchen),
        dirt(bedR)
    },
    *w7 <- {
        at(robot,livingR),
        at(roomba,livingR),
        dirt(livingR),
        dirt(kitchen),
        liquid(kitchen)
    }
    *w8 <- {
        at(robot,livingR),
        at(roomba,livingR),
        dirt(livingR),
        dirt(kitchen),
        liquid(kitchen),
        dirt(bedR)
    }
    
    B[robot] <- {(w1,w1),(w1,w2),(w2,w2),(w2,w3),(w3,w3),
                (w3,w4),(w4,w4),(w4,w5),(w5,w5),(w5,w6),
                (w6,w6),(w6,w7),(w7,w7),(w7,w8),(w8,w8),
                (w8,w9),(w9,w9),(w9,w10),(w10,w10),(w10,w11),
                (w11,w11),(w11,w12),(w12,w12),(w1,w13),(w2,w13),
                (w3,w13),(w4,w13),(w5,w13),(w6,w13),(w13,w13),
                (w7,w14),(w8,w14),(w9,w14),(w10,w14),(w11,w14),
                (w12,w14),(w14,w14)},
    K[robot] <- {(w1,w1),(w1,w2),(w2,w2),(w2,w3),(w3,w3),
                (w3,w4),(w4,w4),(w4,w5),(w5,w5),(w5,w6),
                (w6,w6),(w6,w7),(w7,w7),(w7,w8),(w8,w8),
                (w8,w9),(w9,w9),(w9,w10),(w10,w10),(w10,w11),
                (w11,w11),(w11,w12),(w12,w12),(w1,w13),(w2,w13),
                (w3,w13),(w4,w13),(w5,w13),(w6,w13),(w13,w13),
                (w7,w14),(w8,w14),(w9,w14),(w10,w14),(w11,w14),
                (w12,w14),(w14,w14)}
}

goals{~dirt(livingR) & ~dirt(kitchen) & ~liquid(kitchen) & ~dirt(bedR)}

actions{
    vacuum(?a-Actor,?r-Location){
        owner{?a},
        precondition{dirt(?r)},
        precondition{at(?a,?r)}
        observes{robot},
        causes{~dirt(?r)}
        causes{at(?a,?r)}
    }
    wipe(){
        owner{robot},
        precondition{liquid(kitchen)},
        precondition{at(robot,kitchen)}
        observes{robot},
        causes{~liquid(kitchen)},
        causes{at(robot,kitchen)}
    }
    move(?a-Actor, ?f-Location, ?t-Location){
        owner{?a},
        precondition{at(?a, ?f)},
        causes{at(robot, ?t)},
        causes{~(at(robot, ?f))},
        determines{liquid(?t)},
        determines{dirt(?t)}
    }

}

